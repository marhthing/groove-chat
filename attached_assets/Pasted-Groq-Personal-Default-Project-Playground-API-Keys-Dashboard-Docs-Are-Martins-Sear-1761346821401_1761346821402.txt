Groq

Personal
/

Default Project
Playground
API Keys
Dashboard
Docs

Are Martins

Search
K
Docs
API Reference
Get Started
Overview
Quickstart
OpenAI Compatibility
Responses API
Models
Rate Limits
Examples
Features
Text Generation
Speech to Text
Text to Speech
Images and Vision
Reasoning
Structured Outputs
Built-In Tools
Web Search
Browser Search
Visit Website
Browser Automation
Code Execution
Wolfram Alpha
Compound
Overview
Systems
Built-In Tools
Use Cases
Advanced Features
Batch Processing
Flex Processing
Content Moderation
Prefilling
Tool Use
Remote MCP
LoRA Inference
Prompting Guide
Prompt Basics
Prompt Patterns
Model Migration
Prompt Caching
Production Readiness
Optimizing Latency
Production Checklist
Security Onboarding
Developer Resources
Groq Libraries
Groq Badge
Integrations Catalog
Console
Spend Limits
Projects
Model Permissions
Billing FAQs
Your Data
Support & Guidelines
Developer Community
OpenBench
Errors
Changelog
Policies & Notices
Visit Website
Copy page

Some models and systems on Groq have native support for visiting and analyzing specific websites, allowing them to access current web content and provide detailed analysis based on the actual page content. This tool enables models to retrieve and process content from any publicly accessible website.

The use of this tool with a supported model or system in GroqCloud is not a HIPAA Covered Cloud Service under Groq's Business Associate Addendum at this time. This tool is also not available currently for use with regional / sovereign endpoints.

Supported Models
Built-in website visiting is supported for the following models and systems (on versions later than 2025-07-23):

Model ID	Model
groq/compound

Compound
groq/compound-mini

Compound Mini

For a comparison between the groq/compound and groq/compound-mini systems and more information regarding extra capabilities, see the Compound Systems page.

Quick Start
To use website visiting, simply include a URL in your request to one of the supported models. The examples below show how to access all parts of the response: the final content, reasoning process, and tool execution details.


python

import json
from groq import Groq

client = Groq(
    default_headers={
        "Groq-Model-Version": "latest"
    }
)

chat_completion = client.chat.completions.create(
    messages=[
        {
            "role": "user",
            "content": "Summarize the key points of this page: https://groq.com/blog/inside-the-lpu-deconstructing-groq-speed",
        }
    ],
    model="groq/compound",
)

message = chat_completion.choices[0].message

# Print the final content
print(message.content)

# Print the reasoning process
print(message.reasoning)

# Print executed tools
if message.executed_tools:
    print(message.executed_tools[0])
These examples show how to access the complete response structure to understand the website visiting process.


When the API is called, it will automatically detect URLs in the user's message and visit the specified website to retrieve its content. The response includes three key components:

Content: The final synthesized response from the model
Reasoning: The internal decision-making process showing the website visit
Executed Tools: Detailed information about the website that was visited
How It Works
When you include a URL in your request:

URL Detection: The system automatically detects URLs in your message
Website Visit: The tool fetches the content from the specified website
Content Processing: The website content is processed and made available to the model
Response Generation: The model uses both your query and the website content to generate a comprehensive response
Final Output
This is the final response from the model, containing the analysis based on the visited website content. The model can summarize, analyze, extract specific information, or answer questions about the website's content.


Reasoning and Internal Tool Calls
This shows the model's internal reasoning process and the website visit it executed to gather information. You can inspect this to understand how the model approached the problem and what URL it accessed. This is useful for debugging and understanding the model's decision-making process.


Tool Execution Details
This shows the details of the website visit operation, including the type of tool executed and the content that was retrieved from the website.


Usage Tips
Single URL per Request: Only one website will be visited per request. If multiple URLs are provided, only the first one will be processed.
Publicly Accessible Content: The tool can only visit publicly accessible websites that don't require authentication.
Content Processing: The tool automatically extracts the main content while filtering out navigation, ads, and other non-essential elements.
Real-time Access: Each request fetches fresh content from the website at the time of the request, rendering the full page to capture dynamic content.
Pricing
Please see the Pricing page for more information about costs.

Was this page helpful?

Yes

No

Suggest Edits
On this page
Supported Models
Quick Start
How It Works
Usage Tips
Pricing
Visit Website - GroqDocs